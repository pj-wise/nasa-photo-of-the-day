{"ast":null,"code":"import _taggedTemplateLiteral from \"C:\\\\Users\\\\PJ Wise\\\\git\\\\nasa-photo-of-the-day\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\PJ Wise\\\\git\\\\nasa-photo-of-the-day\\\\src\\\\components\\\\NasaCard.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  max-width: 500px;\\n  margin: 1em auto;\\n  text-align: center;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport { Card, Image, Embed } from \"semantic-ui-react\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport styled from \"styled-components\";\nimport \".././scss/App.css\";\nconst CardContainer = styled.div(_templateObject());\n\nfunction NasaCard(props) {\n  if (props.media_type === \"video\") {\n    return React.createElement(\"div\", {\n      className: \"cardCont\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(Card, {\n      className: \"centered fluid card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(Embed, {\n      className: \"cardVid\",\n      url: props.url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }), React.createElement(Card.Header, {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, props.title), React.createElement(Card.Meta, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, props.date)), React.createElement(Card.Description, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, props.explanation)));\n  } else {\n    return React.createElement(CardContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(Card, {\n      className: \"centered fluid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(Image, {\n      className: \"cardImg\",\n      src: props.url,\n      wrapped: true,\n      ui: false,\n      alt: \"Nasa API photo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), React.createElement(Card.Header, {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, props.title), React.createElement(Card.Meta, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, props.date)), React.createElement(Card.Description, {\n      className: \"explanation\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, props.explanation)));\n  }\n}\n\nexport default NasaCard;","map":{"version":3,"sources":["C:\\Users\\PJ Wise\\git\\nasa-photo-of-the-day\\src\\components\\NasaCard.js"],"names":["React","Card","Image","Embed","styled","CardContainer","div","NasaCard","props","media_type","url","title","date","explanation"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,KAAtB,QAAmC,mBAAnC;AACA,OAAO,kCAAP;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAO,mBAAP;AAEA,MAAMC,aAAa,GAAGD,MAAM,CAACE,GAAV,mBAAnB;;AAMA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,MAAIA,KAAK,CAACC,UAAN,KAAqB,OAAzB,EAAkC;AAChC,WACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAC,SAAjB;AAA2B,MAAA,GAAG,EAAED,KAAK,CAACE,GAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,IAAD,CAAM,MAAN;AAAa,MAAA,SAAS,EAAC,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgCF,KAAK,CAACG,KAAtC,CAFF,EAGE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwBH,KAAK,CAACI,IAA9B,CADF,CAHF,EAME,oBAAC,IAAD,CAAM,WAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmBJ,KAAK,CAACK,WAAzB,CANF,CADF,CADF;AAYD,GAbD,MAaO;AACL,WACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,SAAS,EAAC,SADZ;AAEE,MAAA,GAAG,EAAEL,KAAK,CAACE,GAFb;AAGE,MAAA,OAAO,MAHT;AAIE,MAAA,EAAE,EAAE,KAJN;AAKE,MAAA,GAAG,EAAC,gBALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAQE,oBAAC,IAAD,CAAM,MAAN;AAAa,MAAA,SAAS,EAAC,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgCF,KAAK,CAACG,KAAtC,CARF,EASE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwBH,KAAK,CAACI,IAA9B,CADF,CATF,EAYE,oBAAC,IAAD,CAAM,WAAN;AAAkB,MAAA,SAAS,EAAC,aAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGJ,KAAK,CAACK,WADT,CAZF,CADF,CADF;AAoBD;AACF;;AAED,eAAeN,QAAf","sourcesContent":["import React from \"react\";\r\nimport { Card, Image, Embed } from \"semantic-ui-react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport styled from \"styled-components\";\r\nimport \".././scss/App.css\";\r\n\r\nconst CardContainer = styled.div`\r\n  max-width: 500px;\r\n  margin: 1em auto;\r\n  text-align: center;\r\n`;\r\n\r\nfunction NasaCard(props) {\r\n  if (props.media_type === \"video\") {\r\n    return (\r\n      <div className=\"cardCont\">\r\n        <Card className=\"centered fluid card\">\r\n          <Embed className=\"cardVid\" url={props.url} />\r\n          <Card.Header className=\"title\">{props.title}</Card.Header>\r\n          <Card.Meta>\r\n            <span className=\"date\">{props.date}</span>\r\n          </Card.Meta>\r\n          <Card.Description>{props.explanation}</Card.Description>\r\n        </Card>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <CardContainer>\r\n        <Card className=\"centered fluid\">\r\n          <Image\r\n            className=\"cardImg\"\r\n            src={props.url}\r\n            wrapped\r\n            ui={false}\r\n            alt=\"Nasa API photo\"\r\n          />\r\n          <Card.Header className=\"title\">{props.title}</Card.Header>\r\n          <Card.Meta>\r\n            <span className=\"date\">{props.date}</span>\r\n          </Card.Meta>\r\n          <Card.Description className=\"explanation\">\r\n            {props.explanation}\r\n          </Card.Description>\r\n        </Card>\r\n      </CardContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NasaCard;\r\n"]},"metadata":{},"sourceType":"module"}